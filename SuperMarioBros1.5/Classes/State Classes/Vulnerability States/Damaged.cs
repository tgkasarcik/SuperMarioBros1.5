using Microsoft.Xna.Framework;
using System.Diagnostics;

namespace Sprint5
{
    class Damaged : IVulnerability
    {
        //Mario's damaged state is limited to 5 seconds of time
        private static double DAMAGEDTIMELIMIT = 1;
        //Holds object that should be the parent of the state
        private IPlayer marioObj;
        //Holds the time at which the damage was taken
        private double damagedStart;                                    
        public Damaged(IPlayer targetMario, GameTime gameTime)
        {
            marioObj = targetMario;
            damagedStart = gameTime.TotalGameTime.TotalSeconds;
        }

        /*
         * Mario cannot take damage again until until after recovery
         */
        public void TakeDamage(GameTime gameTime)                                                   
        {
            return;
        }

        public bool IsDamaged()
        {
            return true;
        }

        /*
         * Mario will change back to damageable after a short time
         */
        public void Update(GameTime gameTime)                                                       
        {
            if (gameTime.TotalGameTime.TotalSeconds - damagedStart > DAMAGEDTIMELIMIT)
            {
                marioObj.VState = new Damageable(marioObj);
            }
        }
    }
}
