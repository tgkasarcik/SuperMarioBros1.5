using Microsoft.Xna.Framework;

namespace Sprint5
{
    class Damageable : IVulnerability
    {
        //Holds object that should be the parent of the state
        private IPlayer marioObj;                                       
        public Damageable(IPlayer targetMario)
        {
            marioObj = targetMario;
        }

        /*
         * Mario changes state to Damaged upon taking damage
         */
        public void TakeDamage(GameTime gameTime)                       
        {
            if (!marioObj.HState.HasStar()) 
            {
                marioObj.VState = new Damaged(marioObj, gameTime);
                marioObj.HState.TakeDamage();
            }
        }

        public bool IsDamaged()
        {
            return false;
        }

        /*
         * There is nothing to update here, this state remains constant until an event occurs
         */
        public void Update(GameTime gameTime)                           
        {
            return;
        }
    }
}
